import random
import string
import hashlib

def generate_password(length):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def generate_salt(length):
    characters = string.ascii_letters + string.digits
    salt = ''.join(random.choice(characters) for _ in range(length))
    return salt

def hash_password(password, salt):
    salted_password = password + salt
    hashed_password = hashlib.sha256(salted_password.encode()).hexdigest()
    return hashed_password

def create_password_file(password_file, num_users):
    with open(password_file, "w") as file:
        for _ in range(num_users):
            username = input("Enter username: ")
            password = input("Enter password: ")
            salt = generate_salt(8)
            hashed_password = hash_password(password, salt)
            file.write(username + "," + hashed_password + "," + salt + "\n")
        print("Password file created:", password_file)

def check_password(password, hashed_password, salt):
    salted_password = password + salt
    computed_hashed_password = hashlib.sha256(salted_password.encode()).hexdigest()
    if computed_hashed_password == hashed_password:
        return True
    else:
        return False

def validate_login(password_file):
    with open(password_file, "r") as file:
        credentials = [line.strip().split(",") for line in file]

    login_attempts = 1
    while login_attempts > 0:
        username = input("Enter username: ")
        password = input("Enter password: ")
        for credential in credentials:
            if credential[0] == username and check_password(password, credential[1], credential[2]):
                print("Login successful!")
                return
        login_attempts -= 1
        print("Invalid username or password. Remaining attempts:", login_attempts)

    print("Login failed. Exiting...")

# Get user input for password file
password_file = input("Enter the password file name: ")

# Get user input for the number of users
num_users = int(input("Enter the number of users: "))

# Create the password file
create_password_file(password_file, num_users)

# Validate login
validate_login(password_file)
